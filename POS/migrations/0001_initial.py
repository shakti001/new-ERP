# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2020-01-21 15:39
from __future__ import unicode_literals

import POS.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ERP', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscountMatrixV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=0)),
                ('discount', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FaqCategoryV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FrequentlyQuestionsV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('ques', models.CharField(max_length=500)),
                ('ans', models.CharField(max_length=5000)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parentfaqdata', to='POS.FaqCategoryV2')),
            ],
        ),
        migrations.CreateModel(
            name='GenericProductV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('alias', models.CharField(max_length=500)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('minCost', models.PositiveIntegerField(default=0)),
                ('categoryIndex', models.PositiveIntegerField(default=0)),
                ('visual', models.ImageField(null=True, upload_to=POS.models.getProductPictureUploadPathV2)),
                ('bannerImage', models.ImageField(null=True, upload_to=POS.models.getProductPictureUploadPathV2)),
                ('restricted', models.BooleanField(default=False)),
                ('mobileBanner', models.ImageField(null=True, upload_to=POS.models.getProductPictureUploadPathV2)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='POS.GenericProductV2')),
            ],
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, null=True)),
                ('image', models.ImageField(null=True, upload_to=POS.models.getGiftImage)),
                ('coins', models.PositiveIntegerField(default=0)),
                ('available', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GroupV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MediaV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('link', models.TextField(max_length=300, null=True)),
                ('attachment', models.FileField(null=True, upload_to=POS.models.getProductPictureUploadPathV2)),
                ('mediaType', models.CharField(choices=[('onlineVideo', 'onlineVideo'), ('video', 'video'), ('image', 'image'), ('onlineImage', 'onlineImage'), ('doc', 'doc')], default='image', max_length=10)),
                ('imageIndex', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productMediaUploads', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='offerBannerV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('level', models.PositiveIntegerField()),
                ('image', models.ImageField(upload_to=POS.models.getProductPictureUploadPathV2)),
                ('imagePortrait', models.ImageField(null=True, upload_to=POS.models.getProductPictureUploadPathV2)),
                ('title', models.CharField(max_length=120, null=True)),
                ('subtitle', models.CharField(max_length=120, null=True)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PagesV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('pageurl', models.CharField(max_length=100)),
                ('body', models.CharField(max_length=50000)),
                ('topLevelMenu', models.BooleanField(default=False)),
                ('bottomMenu', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProductMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('typ', models.CharField(choices=[('HSN', 'HSN'), ('SAC', 'SAC')], default='HSN', max_length=5)),
                ('code', models.PositiveIntegerField()),
                ('taxRate', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ProductV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=500, null=True)),
                ('description', models.CharField(max_length=1500, null=True)),
                ('detailedDescription', models.CharField(max_length=2000, null=True)),
                ('productIndex', models.PositiveIntegerField(default=0)),
                ('parentCode', models.CharField(max_length=50, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categgoryData', to='POS.GenericProductV2')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productaddedUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariantV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('sku', models.CharField(blank=True, max_length=150, null=True)),
                ('unitType', models.CharField(choices=[('Ton', 'Ton'), ('Kilogram', 'Kilogram'), ('Gram', 'Gram'), ('Litre', 'Litre'), ('Millilitre', 'Millilitre'), ('Quantity', 'Quantity'), ('Size', 'Size'), ('Size and Color', 'Size and Color')], max_length=50, null=True)),
                ('value', models.CharField(max_length=150, null=True)),
                ('price', models.FloatField(default=0.0, null=True)),
                ('sellingPrice', models.FloatField(default=0.0, null=True)),
                ('specialOffer', models.CharField(max_length=50, null=True)),
                ('maxQtyOrder', models.PositiveIntegerField(default=0)),
                ('minQtyOrder', models.PositiveIntegerField(default=0)),
                ('reOrderThreshold', models.PositiveIntegerField(default=0)),
                ('barcodeId', models.CharField(max_length=150, null=True)),
                ('shippingCost', models.FloatField(default=0.0, null=True)),
                ('stock', models.PositiveIntegerField(null=True)),
                ('displayName', models.CharField(max_length=500, null=True)),
                ('discount', models.FloatField(default=0.0, null=True)),
                ('brand', models.CharField(max_length=500, null=True)),
                ('customizable', models.BooleanField(default=False)),
                ('deliveryTime', models.PositiveIntegerField(default=1)),
                ('customisedDeliveryTime', models.PositiveIntegerField(null=True)),
                ('gstType', models.CharField(choices=[('gst_applicable', 'gst_applicable'), ('gst_extra', 'gst_extra'), ('gst_not_applicable', 'gst_not_applicable')], max_length=50, null=True)),
                ('images', models.ManyToManyField(blank=True, related_name='product_images', to='POS.MediaV2')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_produuct', to='POS.ProductV2')),
                ('productMeta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProductsMetaData', to='POS.ProductMeta')),
            ],
        ),
        migrations.CreateModel(
            name='PromocodeV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('endDate', models.DateTimeField()),
                ('discount', models.IntegerField()),
                ('validTimes', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100, null=True)),
                ('address', models.CharField(max_length=500)),
                ('pincode', models.PositiveIntegerField(null=True)),
                ('mobile', models.CharField(max_length=12, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('gstin', models.CharField(max_length=25, null=True)),
                ('cin', models.CharField(max_length=25, null=True)),
                ('gstincert', models.FileField(null=True, upload_to=POS.models.getgstincert)),
                ('personelid', models.FileField(null=True, upload_to=POS.models.getgstincert)),
                ('logo', models.FileField(null=True, upload_to=POS.models.getgstincert)),
                ('copyrightHolder', models.CharField(max_length=50, null=True)),
                ('fbLink', models.CharField(max_length=50, null=True)),
                ('twitterLink', models.CharField(max_length=50, null=True)),
                ('linkedinLink', models.CharField(max_length=50, null=True)),
                ('playstoreLink', models.CharField(max_length=50, null=True)),
                ('appstoreLink', models.CharField(max_length=50, null=True)),
                ('pinterestLink', models.CharField(max_length=50, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('state', models.CharField(max_length=50, null=True)),
                ('country', models.CharField(max_length=50, null=True)),
                ('categoryBrowser', models.BooleanField(default=True)),
                ('searchfieldplaceholder', models.CharField(max_length=50, null=True)),
                ('codLimit', models.PositiveIntegerField(default=1)),
                ('bankaccountNumber', models.PositiveIntegerField(null=True)),
                ('ifsc', models.CharField(max_length=50, null=True)),
                ('bankName', models.CharField(max_length=50, null=True)),
                ('bankType', models.CharField(choices=[('saving', 'saving'), ('current', 'current')], max_length=10, null=True)),
                ('themeColor', models.CharField(max_length=20, null=True)),
                ('pos', models.BooleanField(default=True)),
                ('cod', models.BooleanField(default=True)),
                ('rating', models.BooleanField(default=True)),
                ('filter', models.BooleanField(default=True)),
                ('payPal', models.BooleanField(default=True)),
                ('paytm', models.BooleanField(default=True)),
                ('payU', models.BooleanField(default=True)),
                ('ccAvenue', models.BooleanField(default=True)),
                ('googlePay', models.BooleanField(default=True)),
                ('cartImage', models.FileField(null=True, upload_to=POS.models.getgstincert)),
                ('paymentImage', models.FileField(null=True, upload_to=POS.models.getgstincert)),
                ('paymentPotraitImage', models.FileField(null=True, upload_to=POS.models.getgstincert)),
                ('searchBackgroundImg', models.FileField(null=True, upload_to=POS.models.getgstincert)),
                ('blogBackgroundImg', models.FileField(null=True, upload_to=POS.models.getgstincert)),
                ('moderators', models.ManyToManyField(blank=True, related_name='usermany', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userforeign', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('targetAmount', models.FloatField()),
                ('achievedCoin', models.PositiveIntegerField(default=0)),
                ('status', models.BooleanField(default=False)),
                ('validity', models.DateField()),
                ('product', models.ManyToManyField(related_name='targerProducts', to='POS.ProductV2')),
            ],
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('contactDoc', models.FileField(null=True, upload_to=POS.models.getContractDoc)),
                ('paymentTerm', models.PositiveIntegerField(default=0)),
                ('contactPersonName', models.CharField(max_length=100)),
                ('contactPersonNumber', models.CharField(max_length=100)),
                ('contactPersonEmail', models.CharField(max_length=100, null=True)),
                ('service', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='ERP.service')),
            ],
        ),
        migrations.CreateModel(
            name='VendorServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField(default=0)),
                ('fulfilmentTime', models.PositiveIntegerField(default=0)),
                ('logistics', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendorsProduct', to='POS.ProductV2')),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='POS.VendorProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('coin', models.PositiveIntegerField(default=0)),
                ('rate', models.FloatField(default=0.0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userWallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('value', models.FloatField(default=0.0)),
                ('type', models.CharField(choices=[('credit', 'credit'), ('debit', 'debit')], default='credit', max_length=50)),
                ('gift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='walletGift', to='POS.Gift')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userWalletTransition', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='promocodev2',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storepromocodes', to='POS.Store'),
        ),
        migrations.AddField(
            model_name='productv2',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeValue', to='POS.Store'),
        ),
        migrations.AddField(
            model_name='pagesv2',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storepages', to='POS.Store'),
        ),
        migrations.AddField(
            model_name='offerbannerv2',
            name='page',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offerBannerPage', to='POS.PagesV2'),
        ),
        migrations.AddField(
            model_name='offerbannerv2',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storebanners', to='POS.Store'),
        ),
        migrations.AddField(
            model_name='offerbannerv2',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupv2',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='productgroup', to='POS.ProductV2'),
        ),
        migrations.AddField(
            model_name='groupv2',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storegrp', to='POS.Store'),
        ),
        migrations.AddField(
            model_name='genericproductv2',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storeVal', to='POS.Store'),
        ),
        migrations.AddField(
            model_name='frequentlyquestionsv2',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storefaq', to='POS.Store'),
        ),
        migrations.AddField(
            model_name='frequentlyquestionsv2',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequentlyQuestionsUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='faqcategoryv2',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storefaqcat', to='POS.Store'),
        ),
        migrations.AddField(
            model_name='discountmatrixv2',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discount_produuct', to='POS.ProductV2'),
        ),
    ]
